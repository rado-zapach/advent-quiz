# https://docs.amplify.aws/angular/build-a-backend/graphqlapi/customize-authorization-rules/

type Question
    @model
    @auth(rules: [{allow: groups, groups: ["Admins"]}, {allow: private, provider: iam}]) {
    id: ID!
    text: String!
    choices: String!
    icon: String!
    correctAnswer: String!
    openTime: AWSDateTime!
    closeTime: AWSDateTime!
    winner: String
}

type Answer @model @auth(rules: [{allow: groups, groups: ["Admins"]}, {allow: private, provider: iam}]) {
    id: ID!
    player: String!
    text: String!
    isCorrect: Boolean
    points: Int
    saveTime: AWSDateTime!
    questionId: String!
}

type ChatMessage
    @model
    @auth(rules: [{allow: owner, operations: [create]}, {allow: private, operations: [read]}]) {
    id: ID!
    text: String!
    channel: String! @index(sortKeyFields: ["createdAt"])
    createdAt: AWSDateTime!
}

type Rules
    @model
    @auth(rules: [{allow: groups, groups: ["Admins"]}, {allow: private, operations: [read]}]) {
    id: ID!
    text: String!
}

type Ranking {
    player: String
    points: Int!
    correctAnswers: Int
    allQuestions: Int
}

type PlayerQuestion {
    id: ID!
    text: String
    choices: String
    icon: String!
    correctAnswer: String
    openTime: AWSDateTime!
    closeTime: AWSDateTime!
    winner: String
}

type PlayerAnswer {
    id: ID!
    player: String!
    text: String
    isCorrect: Boolean
    points: Int
    saveTime: AWSDateTime
    questionId: String
}

type PlayerAttributes {
    username: String!
    email: String!
}

type Query {
    playerQuestionList: [PlayerQuestion!]!
        @auth(rules: [{allow: private}])
        @function(name: "playerQuestionList-${env}")
    playerQuestion(questionId: ID!): PlayerQuestion!
        @auth(rules: [{allow: private}])
        @function(name: "playerQuestion-${env}")
    playerAnswerList(questionId: ID!): [PlayerAnswer!]!
        @auth(rules: [{allow: private}])
        @function(name: "playerAnswerList-${env}")
    playerAnswer(questionId: ID!): PlayerAnswer
        @auth(rules: [{allow: private}])
        @function(name: "playerAnswer-${env}")
    playerAttributesList: [PlayerAttributes!]!
        @auth(rules: [{allow: private}])
        @function(name: "playerAttributesList-${env}")
    ranking: [Ranking!]! @auth(rules: [{allow: private}]) @function(name: "ranking-${env}")
    adminCanWinQuestion(questionId: ID!, username: String!): Boolean!
        @auth(rules: [{allow: groups, groups: ["Admins"]}])
        @function(name: "adminCanWinQuestion-${env}")
}

type Mutation {
    playerSaveAnswer(questionId: ID!, text: String!): String!
        @auth(rules: [{allow: private}])
        @function(name: "playerSaveAnswer-${env}")
    adminSaveWinner(questionId: ID!, username: String!): String!
        @auth(rules: [{allow: groups, groups: ["Admins"]}])
        @function(name: "adminSaveWinner-${env}")
}
